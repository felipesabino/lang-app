scalar AWSDate
scalar AWSTime
scalar AWSDateTime
scalar AWSTimestamp
scalar AWSEmail
scalar AWSJSON
scalar AWSURL
scalar AWSPhone
scalar AWSIPAddress

enum StoryStatusType @aws_api_key @aws_cognito_user_pools {
  GENERATING
  COMPLETED
}

type StoryStatus @aws_api_key @aws_cognito_user_pools {
  storyId: ID!
  status: StoryStatusType!
  generationRequestDate: AWSTimestamp!
  lastUpdate: AWSTimestamp!
}

enum StoryTheme {
  RANDOM
  ADVENTURE
  ROMANCE
  FANTASY
  SCI_FI
  DRAMA
  YOUNG_ADULT
  CHILDREN
}

enum SupportedLanguages {
  en
  pt
  it
  fr
}

enum NarrationStyle {
  RANDOM
  FIRST_PERSON
  THIRD_PERSON
  LETTER
  NEW_YORKER
}


enum GrammarOptions {
  PAST_TENSE
  PRESENT_TENSE
  FUTURE_TENSE
  PAST_CONTINUOUS
  PRESENT_CONTINUOUS
  FUTURE_CONTINUOUS
}

type LanguageOutput @aws_api_key @aws_cognito_user_pools {
  source: SupportedLanguages!
  target: SupportedLanguages!
}

input LanguageInput @aws_api_key @aws_cognito_user_pools  {
  source: SupportedLanguages!
  target: SupportedLanguages!
}

interface StoryOptions {
  theme: StoryTheme!
  language: LanguageOutput!
  narrationStyle: NarrationStyle!
  gramarOptions: [GrammarOptions!]
  specificWords: [String!]
}

type StoryCreationMetadata implements StoryOptions @aws_api_key @aws_cognito_user_pools {
  theme: StoryTheme!
  language: LanguageOutput!
  narrationStyle: NarrationStyle!
  gramarOptions: [GrammarOptions!]
  specificWords: [String!]
  voice: String!
}

enum AudioSpeed {
  SLOW
  NORMAL
}

type SpeechMark @aws_api_key @aws_cognito_user_pools {
  time: Int!
  type: String!
  start: Int!
  end: Int!
  value: String!
}

type StoryAudioAsset @aws_api_key @aws_cognito_user_pools {
  url: AWSURL!
  speed: AudioSpeed!
  speechMarks: [SpeechMark!]!
}

type StoryAssets @aws_api_key @aws_cognito_user_pools {
  text: String!
  translation: String!
  audio: [StoryAudioAsset!]!
}

type Story @aws_api_key @aws_cognito_user_pools {
  storyId: ID!
  creationMetadata: StoryCreationMetadata!
  generationRequestDate: AWSTimestamp!
  lastUpdate: AWSTimestamp!
  status: StoryStatusType!
  assets: StoryAssets!
}

type SentenceExplanation @aws_api_key @aws_cognito_user_pools {
  sentence: String!
  explanation: String!
}

input SentenceExplanationInput @aws_api_key @aws_cognito_user_pools  {
  sentence: String!
  language: LanguageInput!
}

type Query @aws_api_key @aws_cognito_user_pools {
  getStoryById(storyId: ID!): Story
  getStoryStatus(storyId: ID!): StoryStatus
  getSentenceExplanation(input: SentenceExplanationInput!): SentenceExplanation
}

input CreateStoryInput @aws_api_key @aws_cognito_user_pools  {
  theme: StoryTheme!
  language: LanguageInput!
  narrationStyle: NarrationStyle!
  gramarOptions: [GrammarOptions!]
  specificWords: [String!]
  voice: String!
}

type CreateStoryOutput @aws_api_key @aws_cognito_user_pools {
  storyId: ID!
}

type Mutation @aws_api_key @aws_cognito_user_pools {
  createStory(story: CreateStoryInput!): CreateStoryOutput!
}
